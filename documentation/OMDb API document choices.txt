Used Google API Material Icons to get the magnifying glass icon - credit is not required.

Decsision made to use Google API jquery (so I won't have to download and run it on my end) - this could help with queriying JSON data.

Will have a Navbar Div that is split in two.
	* Left side for the search bar
	* Right side for the other filters
	*(Need to update this to three columns)

Will have two columns for main body content, as resembling wireframe
Will use cards in ul/li elements (so they can be clicked) for searched movie list

To search, an onkeyup event will trigger an API call (an API call every key pressed)
Also allow any filter button being pressed to trigger an API call

After considering how to retain watchlist information between sessions, explored whether React.js should be used
Decision made against React.js, javascript is fine on it's own.

Downloaded node.js 12.13.0
Downloaded nvm and gitbash

Followed a few different tutorials for others' implementations of omdb api movie search apps

Project most closely followed/code used: https://www.youtube.com/watch?v=KUUSwCAUF0k

Built HTML filters, slider, radiot buttons, built basic API Query

Multi-thumb sliders are complicated!! Found the jQuery UI range slider, but had problems making it work (not formatted correctly).
Chose another slider import which functioned fine - but did not look the same as the wireframe.
Settled on currently used slider, found here - https://www.youtube.com/watch?v=DfSYmk_6vk8&ab_channel=CodingArtist

Updated API Query to include filters and return more than one movie

Tweaked the slider, set beginning year and end year to as they are in wireframe. 
Estimated intended beginning year would be 1930 and end year would be 2030 (application is VERY unlikely to remain un-updated for a decade)

Added a text box for Season No. so that episodes could be searched properly

Used new async "fetch" function. Added cards with html, css and javascript.
Overhauled javascript, added cards html and css, added watchlist.

Fixed a number of bugs, overall formatting work and tweaks.
Created Expand Details section (clicking on movie in the left section brings it up in more detail on the right)

Only showing 10 movies (from first few pages) on left side of screen
Originally created scroll bar to leave Results text on page, changed this to more resemble the wireframe

Added pagination to grab all movie results (that meet search criteria) and display this number below search bar
Found Metacritic rating data in JSON pulled, learnt that tomatometer can only be accessed with API Queries to a different API (Fandango), decided it's best to just use two available ratings.

Instead of having an even movie poster ratio, I made it 125px x 150px, to make the square images displayed in the wireframe.

When testing noticed that when the app searches for episodes it would throw out infinite requests, fixed this by removing the pagination from the episode search method - it's not needed as all episode of the selected season will be pulled in one API call.

Chose to NOT make the scroll bar handle shorter. Originally I wanted it to line up with what the wireframe shows by making the bottom half of the scroll bar handle invisible.
When doing this, the visible part of the scroll bar handle can never touch the bottom of the scroll bar track, also a user might be confused when clicking below the handle.

Chose to add a SEARCHING message, so the user is aware that something is happening and encouraged to be patient

Added "Too many results", "No results" and "Search bar is empty" messages based on error messages, directed the user towards typing rather than using the other filters

Sticking to grid system even though it's become quite painful ;-;

Decided not to make the whole page massively bordered like in the wireframe
